It is just a proof of concept now.

It should work with single interface device with bulk and interrupt endpoints.
It can't work with usb device with iso endpoints, most usb audio cards and 
usb webcams are such device.

USB devices I have tested ok for me:

one usb mouse
two usb flash disk
(one disk only work with user space usbipd daemon, it need reset device function)
one hid device compatible usb secure key

To build userspace usbip tool:

On a linux host:

1. install mingw32

For debian based linux distribution, run apt-get install mingw32

2. run make in this directory


To build kernel driver:

On a windows host:

1. install windows DDK
  
   I download version 6001.18002 from MSDN site. I think the other
version perhaps will be ok too.

2. enter windows xp build env, and run i.bat in this directroy to
build and install the kernel driver. 

   you need devcon (from windows DDK sample) to install it.

To test:

You'd better test the kernel driver in a virtual windows guest. Then
it won't crash your pc when this stuff BSOD.

run usbip -l xxx.xxx.xxx.xxx to show the exported usb device from linux
run usbip -a xxx.xxx.xxx.xxx x-x to use it.
run usbip -d 0 to detach all usb device

About LICENSE:

I'd like to release these code under GPL,
but since the kernel driver is started from a ddk sample (toaster sample),
there is some MS license stuff at the beginning of every driver file.

But I think I will change/rewrite the driver codes heavyly and at last I will
make the driver compiled with mingw32, then I will delete all of the MS license 
stuff.
